---
import DefaultLayout from '../../layouts/DefaultLayout.astro'
import { Breadcrumbs, BreadcrumbsItem, Media } from 'accessible-astro-components'

export async function getStaticPaths() {
  const response = await fetch('https://graphql.datocms.com/', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      Accept: 'application/json',
      Authorization: `Bearer ${import.meta.env.DATOCMS_API_KEY}`,
    },
    body: JSON.stringify({
      query: `query BlogPosts {
        allBlogPosts {
          id
          title
          body
          eventStartDate
          image {
            url
          }
        }
      }`,
    }),
  });

  const json = await response.json();
  const data  = json.data.allBlogPosts;
  console.log(data)

  // Check if there is data before mapping
  if (!data || data.length === 0) {
    console.error("No data received from DatoCMS");
    return { paths: [], fallback: true }; // or fallback: false depending on your use case
  }

  return data.map((post) => {
    return {
      params: { post: post.title.replaceAll(' ', '-').toLowerCase() },
      props: { post },
    }
  })

}

const { post } = Astro.props

---

<DefaultLayout title={post.title} description={post.body} url={post.title}>
  <div class="container">
    <div class="mt-12">
      <Breadcrumbs>
        <BreadcrumbsItem href="/" label="Hem" />
        <BreadcrumbsItem href="/event" label="Evenemang" />
        <BreadcrumbsItem currentPage={true} label={post.title} />
      </Breadcrumbs>
    </div>
  </div>
  <section class="my-12">
    <div class="container">
      <h1>{post.title}</h1><br />
      <p>Evenemanget startar: {post.eventStartDate}</p>
    </div>
  </section>
  <section class="my-12">
    <div class="container">
      <p class="text-2xl">{post.body}</p>
      <Media
        class="rounded-lg"
        src={post.image.url}
      />
    </div>
  </section>
</DefaultLayout>

<style lang="scss">
  ul {
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 4rem;

    @media (min-width: 550px) {
      grid-template-columns: repeat(2, 1fr);
      grid-gap: 2rem;
    }

    @media (min-width: 950px) {
      grid-template-columns: repeat(3, 1fr);
    }
  }
</style>
